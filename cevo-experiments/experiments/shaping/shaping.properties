experiment.name = shaping-trajectories
experiment.seed = random
experiment.target.0 = class=GenerationsTarget, generations=5

# evolution parameters
operators.0 = class=WPCUniformMutation, probability=1, min=-0.1, max=0.1
operators.2 = class=StateTrajectoryMutation, env=${class=OthelloEnvironment} 

evolution.candidatesFactory.0 = class=MutatingPopulationFactory, individualFactory=${class=WPCIndividualFactory; minWeight=-0.2; maxWeight=0.2; wpcLength=64}, mutation=${operators.0}
evolution.candidatesFactory.3 = class=UniformRandomPopulationFactory, individualFactory=${class=StateTrajectoryFactory; environment=${class=OthelloEnvironment}}

evolution.individualsFactory.0 = class=WPCPopulationFactory, minWeight=-10, maxWeight=10, wpcLength=64

evolution.model.0 = class=MuPlusLambdaEvolutionModel, mu=2 , lambda=2, mutation=${operators.0}
evolution.model.1 = class=MuPlusLambdaEvolutionModel, mu=2 , lambda=2, mutation=${operators.2}

interactionDomain.1 = class=OthelloWPCStateTrajectoryInteraction, opponentFactory=${evolution.individualsFactory.0}, numGames=10, playBoth=true
interactionDomain.2 = class=OthelloWPCInteraction, playBoth=true
interactionScheme = class=RoundRobinInteractionScheme, domain=${interactionDomain.1}

## 2-pop algorithms

#experiment.algorithm.3 = class=TwoPopulationCompetitiveCoevolution, name=2cel, threads=1, interactionScheme=${interactionScheme},\ 
#	solutionsSpecies=${class=Species; aggregate=${class=SimpleSumFitness}; evolutionModel=${evolution.model.0}; factory=${evolution.candidatesFactory.0}; populationSize=4},\
#	testsSpecies=${class=Species; aggregate=${class=DistinctionsFitnessSharing}; evolutionModel=${evolution.model.0}; factory=${evolution.candidatesFactory.0}; populationSize=4}

experiment.algorithm.4 = class=TwoPopulationCompetitiveCoevolution, name=2cel-env, threads=1, interactionScheme=${interactionScheme},\ 
	solutionsSpecies=${class=Species; aggregate=${class=SimpleSumFitness}; evolutionModel=${evolution.model.0}; factory=${evolution.candidatesFactory.0}; populationSize=4},\
	testsSpecies=${class=Species; aggregate=${class=DistinctionsFitnessSharing}; evolutionModel=${evolution.model.1}; factory=${evolution.candidatesFactory.3}; populationSize=4} 	

#experiment.algorithm.5 = class=RandomSamplingTwoPopHybrid, name=2cel-rs, randomSample=25, threads=1, \ 
#	solutions=${class=Population; evolutionModel=${evolution.model.0}; evaluator=${evaluator.0}; factory=${evolution.candidatesFactory.0}; populationSize=50}, \
#	tests=${class=Population; evolutionModel=${evolution.model.2}; evaluator=${evaluator.1}; factory=${evolution.candidatesFactory.2}; populationSize=26}, \
#	testsFactory=${evolution.individualsFactory.0} 	

# retrospection
retrospection.interaction = class=OthelloWPCInteraction, playBoth=true
experiment.retrospectionTask.0 = class=QueryRetrospectionTask, name=solutionMeu, query=${class=BestOfGenerationSolutionQuery}, \
	context=${class=ExpectedUtility; sampleSize=250; domain=${class=OthelloWPCInteraction; playBoth=true}; sampleFactory=${evolution.individualsFactory.0}}

# reports
reports.outputPath = ./experiments/shaping/
reports.createSubdir = false
reports.uniqueSubdir = true

#reports.0 = class = EvolutionHistoryReport
reports.1 = class = ExperimentConfiguration
reports.2 = class = TablesReport
#reports.2 = class = ResultsTables, tasks=*
#reports.2 = class = ClusterTablesReport, clusterSize=120, tasks=*
#reports.3 = class = TablesView, tasks=*
