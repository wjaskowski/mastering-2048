experiment.name = rsel
experiment.seed = random
experiment.target.0 = class=GenerationsTarget, generations=500

# evolution parameters
operators.0 = class=WPCUniformMutation, probability=1, min=-0.1, max=0.1

evolution.candidatesFactory.0 = class=MutatingPopulationFactory, individualFactory=${class=WPCIndividualFactory; minWeight=-0.2; maxWeight=0.2; wpcLength=64}, mutation=${operators.0}

evolution.randomSampleFactory = class=WPCPopulationFactory, minWeight=-10, maxWeight=10, wpcLength=64

evolution.model = class=MuPlusLambdaEvolutionModel, mu=25 , lambda=25, mutation=${operators.0}

interactionDomain = class=OthelloWPCInteraction, playBoth=true
interactionScheme = class=RoundRobinInteractionScheme, domain=${interactionDomain}

solutions.species = class=Species, aggregate=${class=SimpleSumFitness}, evolutionModel=${evolution.model}, factory=${evolution.candidatesFactory.0}, populationSize=50
	
# 1-pop algorithms
experiment.algorithm.0 = class=RandomSamplingEvolutionaryLearning, species=${solutions.species}, interactionScheme=${interactionScheme}, randomSampleFactory=${evolution.randomSampleFactory}, name=rsel-50, randomSampleSize=50, threads=1

experiment.algorithm.1 = class=RandomSamplingEvolutionaryLearning, species=${solutions.species}, interactionScheme=${interactionScheme}, randomSampleFactory=${evolution.randomSampleFactory}, name=rsel-500, randomSampleSize=500, threads=1

experiment.algorithm.2 = class=RandomSamplingEvolutionaryLearning, species=${solutions.species}, interactionScheme=${interactionScheme}, randomSampleFactory=${evolution.randomSampleFactory}, name=rsel-5000, randomSampleSize=5000, threads=1

experiment.algorithm.3 = class=RandomSamplingEvolutionaryLearning, species=${solutions.species}, interactionScheme=${interactionScheme}, randomSampleFactory=${evolution.randomSampleFactory}, name=rsel-50000, randomSampleSize=50000, threads=1


# retrospection
retrospection.dbFile = /home/mszubert/res/othello-pprofile-db-random-new.dump
retrospection.random = class=ThreadedRandom, seed=111

experiment.retrospectionTask.0 = class=QueryRetrospectionTask, name=meu, query=${class=BestOfGenerationSolutionQuery}, context=${class=ExpectedUtility; sampleSize=25000; domain=${class=OthelloWPCInteraction; playBoth=true}; sampleFactory=${evolution.randomSampleFactory}; random=${retrospection.random}}

experiment.retrospectionTask.1 = class=QueryRetrospectionTask, name=pool_20_40, query=${class=BestOfGenerationSolutionQuery}, context=${class=ExpectedUtility; sampleSize=15000; domain=${class=OthelloWPCInteraction; playBoth=true}; sampleFactory=${class=WPCPerfProfileDBFactory; dbFile=${retrospection.dbFile}; maxPerformance=40; minPerformance=20}; random=${retrospection.random}}

experiment.retrospectionTask.2 = class=QueryRetrospectionTask, name=pool_40_60, query=${class=BestOfGenerationSolutionQuery}, context=${class=ExpectedUtility; sampleSize=15000; domain=${class=OthelloWPCInteraction; playBoth=true}; sampleFactory=${class=WPCPerfProfileDBFactory; dbFile=${retrospection.dbFile}; maxPerformance=60; minPerformance=40}; random=${retrospection.random}}

experiment.retrospectionTask.3 = class=QueryRetrospectionTask, name=pool_60_80, query=${class=BestOfGenerationSolutionQuery}, context=${class=ExpectedUtility; sampleSize=15000; domain=${class=OthelloWPCInteraction; playBoth=true}; sampleFactory=${class=WPCPerfProfileDBFactory; dbFile=${retrospection.dbFile}; maxPerformance=80; minPerformance=60}; random=${retrospection.random}}

# reports
reports.outputPath = ./
reports.createSubdir = false
reports.uniqueSubdir = true

reports.1 = class = ExperimentConfiguration
reports.2 = class = TablesReport
#reports.2 = class = ResultsTables, tasks=*
#reports.2 = class = ClusterTablesReport, clusterSize=120, tasks=*
#reports.3 = class = TablesView, tasks=*
