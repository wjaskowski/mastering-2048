experiment.name = gecco-improving
experiment.seed = random
experiment.target.0 = class=GenerationsTarget, generations=2

# evolution parameters
operators.0 = class=OthelloMutation, probability=1, mu=0, sigma=0.25
operators.1 = class=OthelloMutation, probability=0.2, mu=0, sigma=0.25

evolution.candidatesFactory.0 = class=OthelloCandidateFactory, minWeight=-1, maxWeight=1, wpcLength=64, populationSize=50
evolution.candidatesFactory.1 = class=OthelloCandidateFactory, minWeight=-1, maxWeight=1, wpcLength=64, populationSize=26

evolution.model.0 = class=MuPlusLambdaEvolutionModel, mu=25 , lambda=25, operator=${operators.0}
evolution.model.1 = class=MuPlusLambdaEvolutionModel, mu=13 , lambda=13, operator=${operators.1}
evolution.model.2 = class=TruncationSelectionEvolutionModel, elites=20, operator=${operators.1}, factory=${evolution.candidatesFactory.1}

# 1-pop algorithms
experiment.algorithm.0 = class=RandomSamplingEvolutionaryLearning, evolutionModel=${evolution.model.0}, \
	evaluator=${class=OthelloRoundRobinEvaluator; aggregate=${class=SimpleSumFitness}; playBoth=true}, \
	candidatesFactory=${evolution.candidatesFactory.0},	name=rsel, randomSample=50
	
experiment.algorithm.1 = class=OnePopulationCompetitiveCoevolution, evolutionModel=${evolution.model.0}, \
	evaluator=${class=OthelloRoundRobinEvaluator; aggregate=${class=SimpleSumFitness}; playBoth=true}, \
	candidatesFactory=${evolution.candidatesFactory.0},	name=cel

experiment.algorithm.2 = class=OnePopulationCompetitiveCoevolution, evolutionModel=${evolution.model.0}, \
	evaluator=${class=OthelloRoundRobinEvaluator; aggregate=${class=CompetitiveFitnessSharing}; playBoth=true}, \
	candidatesFactory=${evolution.candidatesFactory.0},	name=cel-fs
	
# retrospection
experiment.retrospectionTask.0 = class=RetrospectionTask, name=MEU, query=${class=BestOfGenerationQuery}, \
	context=${class=ExpectedUtility; sampleSize=50000; factory=${evolution.candidatesFactory.0}}, \
	processor=${class=RetrospectionProcessor}

# reports
reports.outputPath = /Users/pliskowski/Downloads/experiments/
#reports.createSubdir = false

reports.0 = class = SerializationReport
reports.1= class = ExperimentConfiguration
#reports.2 = class = ResultsTables, tasks=*
reports.2 = class = ClusterTablesReport, clusterSize=2, tasks=*
#reports.3 = class = TablesView, tasks=*


